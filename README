# üìÖ Smart AI Calendar Tool

An AI-powered smart scheduling application that helps users automatically generate structured calendar events based on free-text input. Built with React (frontend), Express + TypeScript (backend), and secured using Auth0.

---

## üöÄ Features

- üîê User Authentication (Auth0)
- üß† Natural Language Input ‚Üí Structured Calendar Events (LLM-generated)
- üìÇ View, Update, and Download Calendar (.ics format)
- üóÉÔ∏è Each user's calendars are stored and accessed individually
- üßæ Load latest calendar on login
- üß≤ Local file storage with persistent JSON and ICS files

---

## üõ†Ô∏è Tech Stack

### Frontend:
- React (JavaScript)
- Material UI
- Auth0 React SDK
- Axios

### Backend:
- Node.js + Express (TypeScript)
- Auth0 Express Middleware (JWT verification)
- Local file storage (JSON and ICS)
- OpenRouter.ai API (LLM calls)

---

## üì¶ Folder Structure

```bash
backend/
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ auth/             # Auth0 middleware & types
‚îÇ   ‚îú‚îÄ‚îÄ controller/       # Route controllers
‚îÇ   ‚îú‚îÄ‚îÄ routes/           # Express route handlers
‚îÇ   ‚îú‚îÄ‚îÄ services/         # LLM, file handling, calendar utils
‚îÇ   ‚îî‚îÄ‚îÄ app.ts            # Main Express app
‚îÇ   ‚îî‚îÄ‚îÄ server.ts         # Server entry point
‚îú‚îÄ‚îÄ calendar_store/       # Per-user calendar JSON files
‚îú‚îÄ‚îÄ calendar_files/       # Generated .ics files

frontend/
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ components/
‚îÇ   ‚îú‚îÄ‚îÄ pages/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ Dashboard.js  # Core calendar UI
‚îÇ   ‚îî‚îÄ‚îÄ index.js
```

---

## üß™ Local Setup

### ‚úÖ Prerequisites

- Node.js v18+
- Auth0 Account
- OpenRouter API Key
- React + npm setup

---

### üîß Backend Setup

```bash
cd backend
npm install
```

Create a `.env` file:

```
OPENROUTER_API_KEY=your_openrouter_api_key_here
```

Start the backend:

```bash
npm run dev
```

> Runs on `http://localhost:8000`

---

### üåê Frontend Setup

```bash
cd frontend
npm install
```

Update `index.js`:

```jsx
<Auth0Provider
  domain="YOUR_DOMAIN"
  clientId="YOUR_CLIENT_ID"
  authorizationParams={{
    redirect_uri: window.location.origin,
    audience: "http://localhost:8000",
  }}
>
```

Start the frontend:

```bash
npm start
```

> Runs on `http://localhost:3000`

---

## üîê Auth0 Configuration

In the Auth0 dashboard:

1. Go to **Applications ‚Üí APIs**
2. Click **Create API**
   - **Name:** Smart AI Calendar API
   - **Identifier:** `http://localhost:8000`
   - **Algorithm:** RS256
3. Go to your Application Settings and set:
   - **Callback URL:** `http://localhost:3000`
   - **Logout URL:** `http://localhost:3000`

---

## üì• API Endpoints (Protected)

| Method | Endpoint                          | Description                            |
|--------|-----------------------------------|----------------------------------------|
| POST   | `/calendar/plan`                  | Generate new calendar                  |
| GET    | `/calendar/latest`                | Get latest calendar for logged-in user |
| GET    | `/calendar/view/:id`              | View calendar by ID                    |
| POST   | `/calendar/update/:id?`           | Update latest calendar (optional ID)   |
| GET    | `/calendar/download/:id`          | Download calendar `.ics` file          |
| DELETE | `/calendar/delete_calendar/:id`   | Delete calendar by ID                  |

---

## üß† AI Prompting

Used OpenRouter.ai with Gemini 2.5 (`google/gemini-2.5-pro-exp-03-25:free`) to convert user input into structured JSON calendar events.

### Example Output:
```json
[
  {
    "title": "Team Sync",
    "start": [2025, 3, 30, 10, 0],
    "duration": { "hours": 1 },
    "location": "Zoom"
  }
]
```
